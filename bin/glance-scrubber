#!/usr/bin/env python
# vim: tabstop=4 shiftwidth=4 softtabstop=4

# Copyright 2011 OpenStack LLC.
# All Rights Reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.

"""
Glance Scrub Service
"""

import gettext
import os
import sys

# If ../glance/__init__.py exists, add ../ to Python search path, so that
# it will override what happens to be installed in /usr/(local/)lib/python...
possible_topdir = os.path.normpath(os.path.join(os.path.abspath(sys.argv[0]),
                                   os.pardir,
                                   os.pardir))
if os.path.exists(os.path.join(possible_topdir, 'glance', '__init__.py')):
    sys.path.insert(0, possible_topdir)

gettext.install('glance', unicode=1)

from glance.common import cfg
from glance.common import config
from glance.store import scrubber


if __name__ == '__main__':
    try:
        conf = config.GlanceConfigOpts()
        conf.register_cli_opt(
            cfg.BoolOpt('daemon',
                        short='D',
                        default=False,
                        help='Run as a long-running process. When not '
                             'specified (the default) run the scrub operation '
                             'once and then exits. When specified do not exit '
                             'and run scrub on wakeup_time interval as '
                             'specified in the config.'))
        conf.register_opt(cfg.IntOpt('wakeup_time', default=300))
        conf()

        app = config.load_paste_app(conf, 'glance-scrubber')

        if conf.daemon:
            server = scrubber.Daemon(conf.wakeup_time)
            server.start(app)
            server.wait()
        else:
            import eventlet
            pool = eventlet.greenpool.GreenPool(1000)
            scrubber = app.run(pool)
    except RuntimeError, e:
        sys.exit("ERROR: %s" % e)
